# -*- Mode: makefile-gmake -*-

.PHONY: clean all debug release coverage

#
# Real test makefile defines EXE (and possibly SRC) and includes this one.
#

ifndef EXE
${error EXE not defined}
endif

SRC ?= $(EXE).cpp

#
# Required packages
#

PKGS += Qt5Core Qt5Quick libglibutil libfoil libcrypto gobject-2.0 glib-2.0

#
# Default target
#

all: debug release

#
# Directories
#

SRC_DIR = .
TOP_DIR = ../..
APP_DIR = $(TOP_DIR)/src
QRENCODE_DIR = $(TOP_DIR)/libqrencode
HARBOUR_DIR = $(TOP_DIR)/harbour-lib
BUILD_DIR = build
DEBUG_BUILD_DIR = $(BUILD_DIR)/debug
RELEASE_BUILD_DIR = $(BUILD_DIR)/release
COVERAGE_BUILD_DIR = $(BUILD_DIR)/coverage

#
# Tools and flags
#

CC = $(CROSS_COMPILE)gcc
LD = $(CC)
MOC = qtchooser -run-tool=moc -qt=5
WARNINGS = -Wall
INCLUDES = -I$(BUILD_DIR) -I$(APP_DIR) -I$(HARBOUR_DIR)/include \
  -I$(QRENCODE_DIR)
BASE_FLAGS = -fPIC
BASE_LDFLAGS = $(BASE_FLAGS) $(LDFLAGS)
BASE_CFLAGS = $(BASE_FLAGS) $(CFLAGS)
FULL_CFLAGS = $(BASE_CFLAGS) $(DEFINES) $(WARNINGS) $(INCLUDES) -MMD -MP \
  $(shell pkg-config --cflags $(PKGS))
FULL_LDFLAGS = $(BASE_LDFLAGS)
LIBS = $(shell pkg-config --libs $(PKGS)) -lstdc++
QUIET_MAKE = make --no-print-directory
DEBUG_FLAGS = -g
RELEASE_FLAGS =
COVERAGE_FLAGS = -g

DEBUG_LDFLAGS = $(FULL_LDFLAGS) $(DEBUG_FLAGS)
RELEASE_LDFLAGS = $(FULL_LDFLAGS) $(RELEASE_FLAGS)
COVERAGE_LDFLAGS = $(FULL_LDFLAGS) $(COVERAGE_FLAGS) --coverage

DEBUG_CFLAGS = $(FULL_CFLAGS) $(DEBUG_FLAGS) -DDEBUG -DHARBOUR_DEBUG
RELEASE_CFLAGS = $(FULL_CFLAGS) $(RELEASE_FLAGS) -O2
COVERAGE_CFLAGS = $(FULL_CFLAGS) $(COVERAGE_FLAGS) --coverage

QRENCODE_MAJOR_VERSION = 4
QRENCODE_MINOR_VERSION = 0
QRENCODE_MICRO_VERSION = 2

QRENCODE_CFLAGS = -DSTATIC_IN_RELEASE=static \
  -DMAJOR_VERSION=$(QRENCODE_MAJOR_VERSION) \
  -DMINOR_VERSION=$(QRENCODE_MINOR_VERSION) \
  -DMICRO_VERSION=$(QRENCODE_MICRO_VERSION) \
  -DVERSION=\"$(QRENCODE_MAJOR_VERSION).$(QRENCODE_MINOR_VERSION).$(QRENCODE_MICRO_VERSION)\"

#
# Files
#

DEBUG_OBJS = \
  $(MOC_H:%.h=$(DEBUG_BUILD_DIR)/moc_h_%.o) \
  $(MOC_CPP:%.cpp=$(DEBUG_BUILD_DIR)/moc_cpp_%.o) \
  $(APP_SRC:%.cpp=$(DEBUG_BUILD_DIR)/app_%.o) \
  $(SRC:%.cpp=$(DEBUG_BUILD_DIR)/%.o) \
  $(HARBOUR_SRC:%.cpp=$(DEBUG_BUILD_DIR)/harbour_%.o) \
  $(QRENCODE_SRC:%.c=$(DEBUG_BUILD_DIR)/qrencode_%.o)
RELEASE_OBJS = \
  $(MOC_H:%.h=$(RELEASE_BUILD_DIR)/moc_h_%.o) \
  $(MOC_CPP:%.cpp=$(RELEASE_BUILD_DIR)/moc_cpp_%.o) \
  $(APP_SRC:%.cpp=$(RELEASE_BUILD_DIR)/app_%.o) \
  $(SRC:%.cpp=$(RELEASE_BUILD_DIR)/%.o) \
  $(HARBOUR_SRC:%.cpp=$(RELEASE_BUILD_DIR)/harbour_%.o) \
  $(QRENCODE_SRC:%.c=$(RELEASE_BUILD_DIR)/qrencode_%.o)
COVERAGE_OBJS = \
  $(MOC_H:%.h=$(COVERAGE_BUILD_DIR)/moc_h_%.o) \
  $(MOC_CPP:%.cpp=$(COVERAGE_BUILD_DIR)/moc_cpp_%.o) \
  $(APP_SRC:%.cpp=$(COVERAGE_BUILD_DIR)/app_%.o) \
  $(SRC:%.cpp=$(COVERAGE_BUILD_DIR)/%.o) \
  $(HARBOUR_SRC:%.cpp=$(COVERAGE_BUILD_DIR)/harbour_%.o) \
  $(QRENCODE_SRC:%.c=$(COVERAGE_BUILD_DIR)/qrencode_%.o)

#
# Dependencies
#

DEPS = $(DEBUG_OBJS:%.o=%.d) $(RELEASE_OBJS:%.o=%.d) $(COVERAGE_OBJS:%.o=%.d)
ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(DEPS)),)
-include $(DEPS)
endif
endif

$(DEBUG_OBJS): | $(DEBUG_BUILD_DIR)
$(RELEASE_OBJS): | $(RELEASE_BUILD_DIR)
$(COVERAGE_OBJS): | $(COVERAGE_BUILD_DIR)

#
# Rules
#

DEBUG_EXE = $(DEBUG_BUILD_DIR)/$(EXE)
RELEASE_EXE = $(RELEASE_BUILD_DIR)/$(EXE)
COVERAGE_EXE = $(COVERAGE_BUILD_DIR)/$(EXE)

debug: $(DEBUG_EXE)

release: $(RELEASE_EXE)

coverage: $(COVERAGE_EXE)

clean:
	rm -f *~
	rm -fr $(BUILD_DIR)

test_banner:
	@echo "===========" $(EXE) "=========== "

test: test_banner debug 
	@$(DEBUG_EXE)

valgrind: test_banner debug
	@G_DEBUG=gc-friendly G_SLICE=always-malloc valgrind --tool=memcheck --leak-check=full --show-possibly-lost=no $(DEBUG_EXE)

$(BUILD_DIR):
	mkdir -p $@

$(DEBUG_BUILD_DIR):
	mkdir -p $@

$(RELEASE_BUILD_DIR):
	mkdir -p $@

$(COVERAGE_BUILD_DIR):
	mkdir -p $@

$(BUILD_DIR)/moc_%.cpp : $(APP_DIR)/%.h
	$(MOC) $< -o $@

$(BUILD_DIR)/%.moc : $(APP_DIR)/%.cpp
	$(MOC) $< -o $@

$(DEBUG_BUILD_DIR)/%.o : $(SRC_DIR)/%.cpp
	$(CC) -c $(DEBUG_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(RELEASE_BUILD_DIR)/%.o : $(SRC_DIR)/%.cpp
	$(CC) -c $(RELEASE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(COVERAGE_BUILD_DIR)/%.o : $(SRC_DIR)/%.cpp
	$(CC) -c $(COVERAGE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(DEBUG_BUILD_DIR)/moc_h_%.o : $(BUILD_DIR)/moc_%.cpp $(BUILD_DIR)
	$(CC) -c $(DEBUG_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(RELEASE_BUILD_DIR)/moc_h_%.o : $(BUILD_DIR)/moc_%.cpp $(BUILD_DIR)
	$(CC) -c $(RELEASE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(COVERAGE_BUILD_DIR)/moc_h_%.o : $(BUILD_DIR)/moc_%.cpp $(BUILD_DIR)
	$(CC) -c $(COVERAGE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(DEBUG_BUILD_DIR)/moc_cpp_%.o : $(APP_DIR)/%.cpp $(BUILD_DIR)/%.moc
	$(CC) -c $(DEBUG_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(RELEASE_BUILD_DIR)/moc_cpp_%.o : $(APP_DIR)/%.cpp  $(BUILD_DIR)/%.moc
	$(CC) -c $(RELEASE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(COVERAGE_BUILD_DIR)/moc_cpp_%.o : $(APP_DIR)/%.cpp  $(BUILD_DIR)/%.moc
	$(CC) -c $(COVERAGE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(DEBUG_BUILD_DIR)/app_%.o : $(APP_DIR)/%.cpp
	$(CC) -c $(DEBUG_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(RELEASE_BUILD_DIR)/app_%.o : $(APP_DIR)/%.cpp
	$(CC) -c $(RELEASE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(COVERAGE_BUILD_DIR)/app_%.o : $(APP_DIR)/%.cpp
	$(CC) -c $(COVERAGE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(DEBUG_BUILD_DIR)/harbour_%.o : $(HARBOUR_DIR)/src/%.cpp
	$(CC) -c $(DEBUG_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(RELEASE_BUILD_DIR)/harbour_%.o : $(HARBOUR_DIR)/src/%.cpp
	$(CC) -c $(RELEASE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(COVERAGE_BUILD_DIR)/harbour_%.o : $(HARBOUR_DIR)/src/%.cpp
	$(CC) -c $(COVERAGE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(DEBUG_BUILD_DIR)/qrencode_%.o : $(QRENCODE_DIR)/%.c
	$(CC) -c $(DEBUG_CFLAGS) $(QRENCODE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(RELEASE_BUILD_DIR)/qrencode_%.o : $(QRENCODE_DIR)/%.c
	$(CC) -c $(RELEASE_CFLAGS) $(QRENCODE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(COVERAGE_BUILD_DIR)/qrencode_%.o : $(QRENCODE_DIR)/%.c
	$(CC) -c $(COVERAGE_CFLAGS) $(QRENCODE_CFLAGS) -MT"$@" -MF"$(@:%.o=%.d)" $< -o $@

$(DEBUG_EXE): $(DEBUG_OBJS)
	$(LD) $(DEBUG_LDFLAGS) $^ $(LIBS) -o $@

$(RELEASE_EXE): $(RELEASE_OBJS)
	$(LD) $(RELEASE_LDFLAGS) $^ $(LIBS) -o $@

$(COVERAGE_EXE): $(COVERAGE_OBJS)
	$(LD) $(COVERAGE_LDFLAGS) $^ $(LIBS) -o $@
